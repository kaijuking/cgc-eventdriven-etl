AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'CloudGuruChallenge Event Driven Python'

Globals:
  Function:
    Timeout: 120

# Useful links for configuring the template
# - https://docs.amazonaws.cn/en_us/AWSCloudFormation/latest/UserGuide/quickref-lambda.html
# - https://docs.amazonaws.cn/en_us/IAM/latest/UserGuide/reference_policies_examples_lambda-access-dynamodb.html
# - https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html

Resources:
  CGCEventDrivenPython:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: processdata.lambda_handler_process_data
      Runtime: python3.8
      Timeout: 120
      MemorySize: 512
      Policies:
      - AWSLambdaExecute
      - AmazonDynamoDBFullAccess
      - AmazonSNSFullAccess
      - CloudWatchLogsFullAccess
      Environment:
        Variables:
          nytimes: 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv'
          jhopkins: 'https://raw.githubusercontent.com/datasets/covid-19/master/data/time-series-19-covid-combined.csv'
          dbtablename: 'COVID19DATADBv3'
          snstopic: !Ref SNSTopic

  # SNS Topic & Subscription
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "kaijuking28@gmail.com"
          Protocol: email
  
  # Databases
  DBCovidData:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: 'COVID19DATADBv3'
      AttributeDefinitions: 
        - AttributeName: countryname
          AttributeType: S
        - AttributeName: reportdate
          AttributeType: S
      KeySchema:
        - AttributeName: countryname
          KeyType: HASH
        - AttributeName: reportdate
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # Scheduled Event
  EventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "EventRule"
      Name: ProcessCovidDataOnceDaily
      ScheduleExpression: "cron(0 10 * * ? *)"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "CGCEventDrivenPython"
              - "Arn"
          Id: "TargetCGCEventDrivenPython"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "CGCEventDrivenPython"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "EventRule"
          - "Arn"