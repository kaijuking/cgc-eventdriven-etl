AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'CloudGuruChallenge Event Driven Python'

Globals:
  Function:
    Timeout: 240

Resources:
  CGCEventDrivenPython:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: processdata.lambda_handler_process_data
      Runtime: python3.8
      MemorySize: 512
      Policies:
      - AWSLambdaExecute
      - AmazonDynamoDBFullAccess
      - AmazonSNSFullAccess
      - CloudWatchLogsFullAccess
      Environment:
        Variables:
          nytimes: 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv'
          jhopkins: 'https://raw.githubusercontent.com/datasets/covid-19/master/data/time-series-19-covid-combined.csv'
          dbtablename: 'COVID19DATADBv3'
          snstopic: !Ref SNSTopic
          s3bucketname: 's3bucketcovid19data'

  # SNS Topic & Subscription
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "PUT EMAIL HERE"
          Protocol: email
  
  # Databases
  DBCovidData:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: 'COVID19DATADBv3'
      AttributeDefinitions: 
        - AttributeName: countryname
          AttributeType: S
        - AttributeName: reportdate
          AttributeType: S
      KeySchema:
        - AttributeName: countryname
          KeyType: HASH
        - AttributeName: reportdate
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # Scheduled Event
  EventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "EventRule"
      Name: ProcessCovidDataOnceDaily
      ScheduleExpression: "cron(0 10 * * ? *)"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "CGCEventDrivenPython"
              - "Arn"
          Id: "TargetCGCEventDrivenPython"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "CGCEventDrivenPython"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "EventRule"
          - "Arn"

  S3DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: s3bucketcovid19data
        AccessControl: Private
        VersioningConfiguration:
          Status: Enabled
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

  GlueDatabase:
      Type: AWS::Glue::Database
      Properties:
        CatalogId:
          Ref: AWS::AccountId
        DatabaseInput:
          Description: AWS Glue Crawler Databse
          Name: cgcgluedatabase

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "Covid19DataGlueCrawler"
      Role: !GetAtt GlueRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Ref S3DataBucket
      Schedule:
        ScheduleExpression: "cron(0/10 * ? * MON-FRI *)"
  
  GlueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"